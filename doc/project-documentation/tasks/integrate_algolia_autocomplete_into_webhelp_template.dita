<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task id="integrate_algolia_autocomplete_into_webhelp_template">
    <title>Integrate Algolia Autocomplete into Webhelp Template</title>
    <shortdesc>We integrated Algolia Autocomplete into Webhelp template by using an XSLT file.</shortdesc>
    <taskbody>
        <context>
            <p>How to integrate Algolia Autocomplete into Webhelp template?</p>
        </context>
        <steps>
            <step>
                <cmd>Remember our "search.html: file in
                    "templates/webhelp-documentation-template/html"? We need to edit it and remove 2
                    scripts that we can just import by using javascript.</cmd>
                <info>
                    <codeblock id="codeblock_fyd_4wc_s5b">&lt;!DOCTYPE html>
&lt;html>
  &lt;head>
    &lt;script src="${oxygen-webhelp-template-dir}/js/algolia.js">&lt;/script>
  &lt;/head>
  &lt;body>&lt;/body>
&lt;/html></codeblock>
                </info>
            </step>
            <step>
                <cmd>Create a "xslt" folder in "templates/webhelp-documentation-template" and create
                    "custom.xsl" file</cmd>
                <info>
                    <codeblock id="codeblock_xvt_5wc_s5b">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    
    
    xmlns:whc="http://www.oxygenxml.com/webhelp/components"
    xmlns="http://www.w3.org/1999/xhtml"
    
    
    exclude-result-prefixes="xs"
    version="2.0">
    
    &lt;!-- 
         Generate  &lt;div  id="autocomplete"> for Algolia autocomplete integration. 
    -->
    &lt;xsl:template match="whc:webhelp_search_input" mode="copy_template">
        &lt;!-- EXM-36737 - Context node used for messages localization -->
        &lt;xsl:param name="i18n_context" tunnel="yes" as="element()*"/>
        &lt;div>
            &lt;xsl:call-template name="generateComponentClassAttribute">
                &lt;xsl:with-param name="compClass">wh_search_input&lt;/xsl:with-param>
            &lt;/xsl:call-template>
            &lt;!-- Copy attributes -->
            &lt;xsl:copy-of select="@* except @class"/>
            
            &lt;xsl:variable name="localizedSearch">
                &lt;xsl:choose>
                    &lt;xsl:when test="exists($i18n_context)">
                        &lt;xsl:for-each select="$i18n_context[1]">
                            &lt;xsl:call-template name="getWebhelpString">
                                &lt;xsl:with-param name="stringName" select="'webhelp.search'"/>
                            &lt;/xsl:call-template>
                        &lt;/xsl:for-each>
                    &lt;/xsl:when>
                    &lt;xsl:otherwise>Search&lt;/xsl:otherwise>
                &lt;/xsl:choose>
            &lt;/xsl:variable>
            &lt;xsl:variable name="localizedSearchQuery">
                &lt;xsl:choose>
                    &lt;xsl:when test="exists($i18n_context)">
                        &lt;xsl:for-each select="$i18n_context[1]">
                            &lt;xsl:call-template name="getWebhelpString">
                                &lt;xsl:with-param name="stringName" select="'search.query'"/>
                            &lt;/xsl:call-template>
                        &lt;/xsl:for-each>
                    &lt;/xsl:when>
                    &lt;xsl:otherwise>Search query&lt;/xsl:otherwise>
                &lt;/xsl:choose>
            &lt;/xsl:variable>
            
            &lt;xsl:variable name="search_comp_output">
                &lt;form id="searchForm"
                    method="get"
                    role="search"                            
                    action="{concat($PATH2PROJ, 'search', $OUTEXT)}">
                    &lt;div  id="autocomplete">
                        &lt;!--&lt;input type="search" placeholder="{$localizedSearch} " class="wh_search_textfield"
                            id="textToSearch" name="searchQuery" aria-label="{$localizedSearchQuery}" required="required"/>
                        &lt;button type="submit" class="wh_search_button" aria-label="{$localizedSearch}">&lt;span class="search_input_text">&lt;xsl:value-of select="$localizedSearch"/>&lt;/span>&lt;/button>-->
                    &lt;/div>
                &lt;/form>
            &lt;/xsl:variable>
            
            &lt;xsl:call-template name="outputComponentContent">
                &lt;xsl:with-param name="compContent" select="$search_comp_output"/>
                &lt;xsl:with-param name="compName" select="local-name()"/>
            &lt;/xsl:call-template>
        &lt;/div>
    &lt;/xsl:template>
&lt;/xsl:stylesheet></codeblock>
                </info>
            </step>
            <step>
                <cmd>Before applying the template in OxygenXML you have to generate the bundle. To
                    do this open terminal in "src/main/javascript" and execute these commands</cmd>
                <info>
                    <codeblock id="codeblock_rmp_xwc_s5b">npm install
npm run build</codeblock>
                </info>
            </step>
            <step>
                <cmd>After all, open the documentation, apply the template and run your
                    output!</cmd>
            </step>
        </steps>
    </taskbody>
</task>
